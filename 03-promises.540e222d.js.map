{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcF,MAAMG,OACzC,MAAMC,EAAYH,OAAOH,EAAEI,cAAcG,KAAKF,OACxCG,EAAmBL,OAAOH,EAAEI,cAAcK,OAAOJ,OAEvD,IAAK,IAAIK,EAAW,EAAGA,GAAYF,EAAkBE,GAAY,GAMnE,SAAuBA,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUR,IAEpBc,EAAO,C,SAAEN,E,MAAUR,MAEpBA,OAKLgB,CApBqBR,EAAUR,GAqB5BiB,MAAK,EAACT,SAAEA,EAAQR,MAAEA,MACjBR,EAAA0B,OAAOC,QAAQ,uBAAqBX,QAAiBR,UAEtDoB,OAAM,EAACZ,SAAEA,EAAQR,MAAEA,MAClBR,EAAA0B,OAAOG,QAAQ,sBAAoBb,QAAeR,UAxBpDA,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onClickBtnCreate);\n\nfunction onClickBtnCreate(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const delayStep = Number(e.currentTarget.step.value);\n  const amountOfPromises = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amountOfPromises; position += 1) {\n    checkStatusPromise(position, delay);\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction checkStatusPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$iQIUW","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","delay","Number","currentTarget","value","delayStep","step","amountOfPromises","amount","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.540e222d.js.map"}